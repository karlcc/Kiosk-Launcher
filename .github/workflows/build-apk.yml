name: Build Kiosk Launcher APK

on:
  workflow_dispatch:  # permet de lancer manuellement
  push:               # optionnel, lance le build à chaque commit

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          clean: true
          fetch-depth: 1

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v2

      - name: Build APK (debug)
        env:
          DEBUG_KEYSTORE_BASE64: ${{ secrets.DEBUG_KEYSTORE_BASE64 }}
          GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx4g -XX:MaxMetaspaceSize=1g -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8"
        run: |
          echo "Starting debug build..."
          if [ -n "$DEBUG_KEYSTORE_BASE64" ]; then
            echo $DEBUG_KEYSTORE_BASE64 > keystore.b64
            base64 -d keystore.b64 > app/debug.keystore
            rm keystore.b64
            ./gradlew assembleDebug \
              --no-configuration-cache \
              --stacktrace \
              -Pandroid.injected.signing.store.file=$(pwd)/app/debug.keystore \
              -Pandroid.injected.signing.store.password=android \
              -Pandroid.injected.signing.key.alias=androiddebugkey \
              -Pandroid.injected.signing.key.password=android
          else
            ./gradlew assembleDebug --no-configuration-cache --stacktrace
          fi

      - name: Verify APK was created
        run: |
          if [ -f app/build/outputs/apk/debug/app-debug.apk ]; then
            echo "✅ Debug APK created successfully"
            ls -la app/build/outputs/apk/debug/app-debug.apk
          else
            echo "❌ Debug APK not found"
            find app/build/outputs -name "*.apk" -type f || echo "No APK files found"
            exit 1
          fi

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: KioskLauncher-Debug-APK
          path: app/build/outputs/apk/debug/app-debug.apk
